{"config": {"indexing": "full", "lang": ["en"], "min_search_length": 3, "prebuild_index": false, "separator": "[\\s\\-]+"}, "docs": [{"location": "", "text": "", "title": "Home"}, {"location": "about/", "text": "Fraudare medios concita variarum natus \u00b6 Quae nosse Trachine \u00b6 Lorem markdownum Ixione telo quid quo quem, et dat clipeus semper, Chromin vellem coercuerat dixi. Tetigit sidera et Iolao est carpis coeptus urbis Trinacriam tueri, nymphe. Volanti olorinis ruinam ter vagantem femina traxere; unde volucris omnis. Rerum tangere Cancrum probro cornibus solent praestant egredere o lumina stetit tolle aquarum manibus. Abantiades leve! Uterum quae capro vocat! Comitum devicto protinus palmis \u00b6 Te veterem de rapit inmittam nec vincis terrae ut helene: an vestes Saturnia , fugam propiora. Contendere tamen vittae alumnae fatis incola primum , Leucippusque haec tua vix aliquem, inposita: monitis. Manus est vetitum matris candida fraude formidabilis novae seges. Scythica thalamos labentibus iactat A deripit plura simul umbra Loquor armisque Viro Parnasi Lyrcea \u00b6 Stipite surrexit Rhesi. Qui nunc palmis Circes funesta orbator; simul eurus Dite dolis imoque crines cumque. var push = kindlePhpMbps; if (double_public(bcc_motion_graphics, ajax_certificate_halftone - refreshHostHard, native_x_master.error(flashPAdd))) { dram.language_lamp_cut = 75; } else { host += website; repeater_bit(textPageIrq, hdtv_odbc_smartphone, 682776); } diskServletCd += 302217 + system_kerning + drive_boot - kilohertz * data( unix); var leaderboard_ppc_printer = mipsDaemon; if (barFirmwareSrgb) { bug_mouse_p = view_mail_data; cardGateway = dllManet.domain(-3, pipelineError, rw_isdn_zettabyte); zipHdv.openFirewallDouble -= 62; } else { kindleBeta = denial + scareware; } Lapitharum causa mundo sunt dolet omnia forma comae campus Hercule ibi . Cura modo, quoque fumo te occumbere humano rates, faciemque scrutantur rogat sanguine Aeacide tandem, vox Dixit simul! Subsidere nymphae, fameque nec caput Mycale natos, ora populusque tamen Cromyona nostrum: necem. Suae seposuit impediet fuerit nisi, lyra nec: nomina vota minas ubi, esse. Leves et mora, duos inposito ut vocant populo gratissima, Nec videre pensaque solent non dumque. Suis amori, ibi ait: viri: aquilone quinque vulnus. Artem consilioque duorum spatiosa, movet ego pignora cornu ferit praeside , prohibete.", "title": "Fraudare medios concita variarum natus"}, {"location": "about/#fraudare-medios-concita-variarum-natus", "text": "", "title": "Fraudare medios concita variarum natus"}, {"location": "about/#quae-nosse-trachine", "text": "Lorem markdownum Ixione telo quid quo quem, et dat clipeus semper, Chromin vellem coercuerat dixi. Tetigit sidera et Iolao est carpis coeptus urbis Trinacriam tueri, nymphe. Volanti olorinis ruinam ter vagantem femina traxere; unde volucris omnis. Rerum tangere Cancrum probro cornibus solent praestant egredere o lumina stetit tolle aquarum manibus. Abantiades leve! Uterum quae capro vocat!", "title": "Quae nosse Trachine"}, {"location": "about/#comitum-devicto-protinus-palmis", "text": "Te veterem de rapit inmittam nec vincis terrae ut helene: an vestes Saturnia , fugam propiora. Contendere tamen vittae alumnae fatis incola primum , Leucippusque haec tua vix aliquem, inposita: monitis. Manus est vetitum matris candida fraude formidabilis novae seges. Scythica thalamos labentibus iactat A deripit plura simul umbra Loquor armisque", "title": "Comitum devicto protinus palmis"}, {"location": "about/#viro-parnasi-lyrcea", "text": "Stipite surrexit Rhesi. Qui nunc palmis Circes funesta orbator; simul eurus Dite dolis imoque crines cumque. var push = kindlePhpMbps; if (double_public(bcc_motion_graphics, ajax_certificate_halftone - refreshHostHard, native_x_master.error(flashPAdd))) { dram.language_lamp_cut = 75; } else { host += website; repeater_bit(textPageIrq, hdtv_odbc_smartphone, 682776); } diskServletCd += 302217 + system_kerning + drive_boot - kilohertz * data( unix); var leaderboard_ppc_printer = mipsDaemon; if (barFirmwareSrgb) { bug_mouse_p = view_mail_data; cardGateway = dllManet.domain(-3, pipelineError, rw_isdn_zettabyte); zipHdv.openFirewallDouble -= 62; } else { kindleBeta = denial + scareware; } Lapitharum causa mundo sunt dolet omnia forma comae campus Hercule ibi . Cura modo, quoque fumo te occumbere humano rates, faciemque scrutantur rogat sanguine Aeacide tandem, vox Dixit simul! Subsidere nymphae, fameque nec caput Mycale natos, ora populusque tamen Cromyona nostrum: necem. Suae seposuit impediet fuerit nisi, lyra nec: nomina vota minas ubi, esse. Leves et mora, duos inposito ut vocant populo gratissima, Nec videre pensaque solent non dumque. Suis amori, ibi ait: viri: aquilone quinque vulnus. Artem consilioque duorum spatiosa, movet ego pignora cornu ferit praeside , prohibete.", "title": "Viro Parnasi Lyrcea"}, {"location": "nav/", "text": "Home Developer Design Patterns For Service Mesh Overview: Service Mesh Bar For Automation Tooling Overview: Automation Tooling Tools For Developers VCert Adaptable Framework Writing Adaptable Drivers Submitting/Updating Adaptable Drivers For Business Leaders SOMETHING FOR BUSINESS LEADERS Engagement Overview: Engagement For Solution Architects For Funded Developers Testing Ground Diagrams Embedding Inline Embedding Full Page Embedding", "title": "Nav"}, {"location": "_FAQ-Troubleshooting/KnownIssues/", "text": "Known Issues \u00b6 Last update: 21 January 2022 Changing the IP address of a VSatellite (physical or virtual) machine isn't reflected in the VaaS interface. If you change the IP address of the machine where you had previously installed a VSatellite, the IP address is not updated in the {{ vs }} interface. Also, this can make the VSatellite inoperable, so you might need to restart the machine. Progress bar for VSatellite install or uninstall not working correctly When installing or uninstalling a VSatellite while connected using SSH and the Windows version of the Putty client, the progress bar does not reflect progress, as expected.", "title": "Known Issues"}, {"location": "_FAQ-Troubleshooting/KnownIssues/#known-issues", "text": "Last update: 21 January 2022 Changing the IP address of a VSatellite (physical or virtual) machine isn't reflected in the VaaS interface. If you change the IP address of the machine where you had previously installed a VSatellite, the IP address is not updated in the {{ vs }} interface. Also, this can make the VSatellite inoperable, so you might need to restart the machine. Progress bar for VSatellite install or uninstall not working correctly When installing or uninstalling a VSatellite while connected using SSH and the Windows version of the Putty client, the progress bar does not reflect progress, as expected.", "title": "Known Issues"}, {"location": "_FAQ-Troubleshooting/Troubleshooting/", "text": "Troubleshooting \u00b6 Need help solving a perplexing issue? We're listening to you and creating workarounds for troubleshooting the most common issues. Please check back here regularly for new content. If something's missing, please send us your feedback and we'll get on it! VSatellites \u00b6 One or more of my VSatellites appear to have lost connection. \u00b6 Lost VSatellite connections occur most often because of a network failure between VSatellite and {{ vsl }}. Try the following methods to troubleshoot a potentially disconnected VSatellite: Verify that the machine that's hosting VSatellite is up and running. Verify that there's network connectivity between that VSatellite machine and {{ vs }}: Make sure that port 443 isn't blocked on the VSatellite machine. Verify that the VSatellite is able to reach https://vsat-gw.venafi.cloud:9443 If at this point a VSatellite continues to lose connection, uninstall and then reinstall the VSatellite. Note Changing the IP address on the (physical or virtual) machine where you're hosting VSatellites can also cause the VSatellite to fail. For more information, see the related known issue . If you continue to have issues, please contact Venafi Technical Support .", "title": "Troubleshooting"}, {"location": "_FAQ-Troubleshooting/Troubleshooting/#troubleshooting", "text": "Need help solving a perplexing issue? We're listening to you and creating workarounds for troubleshooting the most common issues. Please check back here regularly for new content. If something's missing, please send us your feedback and we'll get on it!", "title": "Troubleshooting"}, {"location": "_FAQ-Troubleshooting/Troubleshooting/#vsatellites", "text": "", "title": "VSatellites"}, {"location": "design-patterns/for-service-mesh/overview-service-mesh/", "text": "", "title": "Overview: Service Mesh"}, {"location": "engagement/overview-engagement/", "text": "Overview: Engaging with the Venafi Ecosystem \u00b6 JING TO FILL IN", "title": "Overview: Engagement"}, {"location": "engagement/overview-engagement/#overview-engaging-with-the-venafi-ecosystem", "text": "JING TO FILL IN", "title": "Overview: Engaging with the Venafi Ecosystem"}, {"location": "testing-ground/testing-diagrams/", "text": "Testing Diagrams \u00b6 Here's an example of a diagram: %%{ init: { \"sequence\": { \"showSequenceNumbers\": true, \"messageAlign\": \"center\" } } }%% sequenceDiagram actor EU as User participant IP as Integrated Platform participant V as Venafi activate EU EU->IP: Enter required SERVICE ACCOUNT connection information (Venafi URL/ClientID/Username/Password) deactivate EU activate IP IP->IP: Store required connection information SECURELY activate V IP->V: Use connection information to call '/vedauth/authorize' providing UN, PW, ClientID, & Scope V-->IP: Returns Access/Refresh tokens and expiry information IP->IP: Store tokens & expiry info IP->V: Use 'access_token' to authorize API calls to Venafi alt [access_token is still valid] V-->IP: API call returns data successfully else [access_token is expired] V-->IP: Returns 'access_token is expired' IP->V: Calls '/vedauth/authorize/' providing ClientID & refresh_token V-->IP: Returns fresh Access/Refresh tokens & expiry info IP->IP: Update stored tokens & expiry info with new values IP->V: Use 'access_token' to authorize API calls to Venafi V-->IP: API call returns data successfully end IP->V: Call 'vedauth/Revoke/token' to clean up active grant deactivate IP deactivate V", "title": "Diagrams"}, {"location": "testing-ground/testing-diagrams/#testing-diagrams", "text": "Here's an example of a diagram: %%{ init: { \"sequence\": { \"showSequenceNumbers\": true, \"messageAlign\": \"center\" } } }%% sequenceDiagram actor EU as User participant IP as Integrated Platform participant V as Venafi activate EU EU->IP: Enter required SERVICE ACCOUNT connection information (Venafi URL/ClientID/Username/Password) deactivate EU activate IP IP->IP: Store required connection information SECURELY activate V IP->V: Use connection information to call '/vedauth/authorize' providing UN, PW, ClientID, & Scope V-->IP: Returns Access/Refresh tokens and expiry information IP->IP: Store tokens & expiry info IP->V: Use 'access_token' to authorize API calls to Venafi alt [access_token is still valid] V-->IP: API call returns data successfully else [access_token is expired] V-->IP: Returns 'access_token is expired' IP->V: Calls '/vedauth/authorize/' providing ClientID & refresh_token V-->IP: Returns fresh Access/Refresh tokens & expiry info IP->IP: Update stored tokens & expiry info with new values IP->V: Use 'access_token' to authorize API calls to Venafi V-->IP: API call returns data successfully end IP->V: Call 'vedauth/Revoke/token' to clean up active grant deactivate IP deactivate V", "title": "Testing Diagrams"}, {"location": "testing-ground/testing-fullpage-embeds/", "text": "Embedding Things \u00b6 (function() { var script = document.createElement('script'); script.src = \"https://paperform.co/__embed.min.js\";document.body.appendChild(script); })()", "title": "Full Page Embedding"}, {"location": "testing-ground/testing-fullpage-embeds/#embedding-things", "text": "(function() { var script = document.createElement('script'); script.src = \"https://paperform.co/__embed.min.js\";document.body.appendChild(script); })()", "title": "Embedding Things"}, {"location": "testing-ground/testing-inline-embeds/", "text": "Embedding Things \u00b6 (function() {var script = document.createElement('script'); script.src = \"https://paperform.co/__embed.min.js\"; document.body.appendChild(script); })()", "title": "Inline Embedding"}, {"location": "testing-ground/testing-inline-embeds/#embedding-things", "text": "(function() {var script = document.createElement('script'); script.src = \"https://paperform.co/__embed.min.js\"; document.body.appendChild(script); })()", "title": "Embedding Things"}, {"location": "tools/adaptable-framework/overview-adaptable-framework/", "text": "Overview: Adaptable Framework \u00b6 Venafi Adaptable Drivers provide a way quick, easy framework to build integrations, primarily with target CAs (certificate authorities) and application platforms (web servers, network devices, application firewalls, etc.), but also to support flexible workflow and logging needs for unique environments.", "title": "Adaptable Framework"}, {"location": "tools/adaptable-framework/overview-adaptable-framework/#overview-adaptable-framework", "text": "Venafi Adaptable Drivers provide a way quick, easy framework to build integrations, primarily with target CAs (certificate authorities) and application platforms (web servers, network devices, application firewalls, etc.), but also to support flexible workflow and logging needs for unique environments.", "title": "Overview: Adaptable Framework"}, {"location": "tools/adaptable-framework/submitting-your-adaptable-driver/", "text": "Submitting/Updating Adaptable Drivers \u00b6 In an effort to streamline code and script submissions for ecosystem solutions, the Venafi Ecosystem has adopted GitLab for better visibility, version control and documentation. If this is an update to an existing solution, please submit a Merge Request to your target repository and the update will be reviewed by the proper parties before being automatically updated on the Venafi Marketplace .", "title": "Submitting/Updating Adaptable Drivers"}, {"location": "tools/adaptable-framework/submitting-your-adaptable-driver/#submittingupdating-adaptable-drivers", "text": "In an effort to streamline code and script submissions for ecosystem solutions, the Venafi Ecosystem has adopted GitLab for better visibility, version control and documentation. If this is an update to an existing solution, please submit a Merge Request to your target repository and the update will be reviewed by the proper parties before being automatically updated on the Venafi Marketplace .", "title": "Submitting/Updating Adaptable Drivers"}, {"location": "tools/adaptable-framework/writing-adaptable-drivers/", "text": "Writing Adaptable Drivers \u00b6 Venafi Adaptable Drivers provide a way quick, easy framework to build integrations, primarily with target CAs (certificate authorities) and application platforms (web servers, network devices, application firewalls, etc.), but also to support flexible workflow and logging needs for unique environments. Venafi Adaptable Drivers support Venafi TLS Protect Datacenter only. Venafi PM team is working on a similar framework for TLS Protect Cloud use cases. Please sign up here to be notified when developer tools are available for TLS Protect Cloud. High-Level Order of Operations \u00b6 Read this doc (You're here!) Decide which DevKit you'll need Build & test your driver using the tools provided in the DevKit Test your driver against TLS Protect Datacenter Submit your driver to Cool Solutions (Venafi's managed GitLab instance) Complete the Marketplace Listing Questionnaire Adaptable Framework Overview \u00b6 The following guidelines apply generally to all versions of the Adaptable Framework. Drivers rely on System.Management.Automation in .NET to invoke PowerShell functions inside a locally hosted script PowerShell functions must not return errors; rather, they must throw exceptions in the same way that actual PowerShell errors do - the adaptable CA driver treats exceptions thrown by a PowerShell function as a fatal error and then halts processing PowerShell functions are responsible for ensuring that data meets the requirements of the integration point Hash Tables \u00b6 Venafi passes variables to (and receives them from) PowerShell functions in the form of hash tables, which are generally easier to work with and allows for the addition of variables without changing the function definition. A general hash table, which includes a common set of data available from Venafi, is passed to all the functions A specific hash table, which includes data that is applicable only to the specific function, is passed to some functions that require additional data All functions must return a single hash table that includes a result along with any other variables that the function is required to return Minimum Requirements \u00b6 PowerShell 3.0 or later .NET 4.6.1 or later NOTE: If your product does not support TLS 1.3, you will need to add the following code to your Adaptable script in order for it to work with the Venafi Platform. [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12 Adaptable Framework Best Practices \u00b6 The following recommended best practices apply to all versions of the Adaptable Framework. Naming Conventions \u00b6 To avoid collisions, you should adopt a standard naming convention that will be used when creating objects (certificates, devices, applications) in Venafi. Collisions can occur when the name you define already exists in Venafi's inventory. You can use the same prefix or suffix, and then add something unique to the name. Suppose your driver connects to a device object via API and imports all the machine identities currently in use on the device. In addition to the certificates themselves being imported, a unique application object must be created as well, which will contain all the metadata (port, partition, profile, configuration options, etc.) needed for Venafi to automatically provision that certificate during a renewal. NOTE: When creating new PowerShell scripts for use with adaptable drivers, keep in mind that the file name is used to identify your script from within the associated object (and within the policy for the Adaptable Application driver) in Trust Protection Platform. Using logical names can help you and other administrators recognize the purpose and intent of each script. Credentials & Authentication \u00b6 Credential objects store the credentials Trust Protection Platform uses to authenticate with devices, applications, CAs, and Active Directory user directories. The stored credential may be a password, a username and password, a certificate, a file paired with a password, or a private key. Trust Protection Platform requires these credentials so it can manage the certificates associated with these devices, applications, and CAs. Credential objects provide an innovative way to centrally manage and share your system credentials. Each credential object can be associated with a single device or application, or it can be shared by multiple objects. After you create your system\u2019s credential objects, you do not have to repeat the credential configuration for each device or application. You simply reference the existing credential object. If the credential changes\u2014for example, an organization might change username and password credentials every 90 days\u2014you merely update the single credential object to give Trust Protection Platform access to all associated devices and applications. Reuse credential objects wherever standardization is possible to avoid creating extraneous objects. Recommend assigning credentials to a Policy folder that contains multiple devices. The policy credentials allow multiple devices to use the same credential. Certificate \"Installations\" \u00b6 Within a customer\u2019s environment, there may be circumstances that require the same certificate to be installed in multiple locations (high-availability, load balancing, etc.). If that is the case, the Venafi platform needs to be made aware of each location. This ensures there are no blind spots for the Security or PKI team, and also provides Venafi the information necessary to automatically provision and activate that certificate during renewal operations. It is critical if your application supports multiple installations of the same certificate, that ALL of those locations be reported back to Venafi. Data Validation \u00b6 You should implement effective data validation in order to catch errors in the script: Check values for validity that are being passed into functions Check values for validity before passing data back to Venafi Logging \u00b6 Generally, Adaptable Framework scripts don\u2019t need to do any logging unless it\u2019s for temporary, debugging purposes. The Adaptable drivers are logging to the standard Venafi logging channel when they call various PowerShell functions. Starting in TPP 19.3, developers can toggle debug logging for individual Adaptable drivers. This sets a $DEBUG_FILE global variable in the Adaptable driver. If toggled on, the script should be logging \u2013 If toggled off, it shouldn\u2019t. The $DEBUG_FILE variable gets set automatically to a suggested file path on the Venafi server for the script to write logs to, using a unique identifier. This is to avoid issues if there are multiple instances trying to write data to the same file. If additional, permanent logs are needed, use Write-EventLog to capture important logging and debug information to the Windows Event Log Throw exceptions back to Venafi Write effective error messages that tell users what went wrong and how to fix the issue General Tips \u00b6 Ideally, certificates should be referenced using the GUID of the certificate object Listing all certificates in a folder could be problematic because there may be a very high number of certificates in some policy folders. A better approach would be to check (search) whether a specific certificate already exists within a given policy folder. Adaptable Types \u00b6 Adaptable CA Driver : Choose this if you are building an integration between Venafi and a Machine Identity Producer , like a Certificate Authority or Managed PKI. Adaptable Application Driver : Choose this if you are building an integration between Venafi and a Machine Identity Consumer , like an application server, network device, WAF, etc. Adaptable Log Driver : Choose this if you are building a solution that will be used to perform virtually any programmatic task in response to the logging of a Venafi event.", "title": "Writing Adaptable Drivers"}, {"location": "tools/adaptable-framework/writing-adaptable-drivers/#writing-adaptable-drivers", "text": "Venafi Adaptable Drivers provide a way quick, easy framework to build integrations, primarily with target CAs (certificate authorities) and application platforms (web servers, network devices, application firewalls, etc.), but also to support flexible workflow and logging needs for unique environments. Venafi Adaptable Drivers support Venafi TLS Protect Datacenter only. Venafi PM team is working on a similar framework for TLS Protect Cloud use cases. Please sign up here to be notified when developer tools are available for TLS Protect Cloud.", "title": "Writing Adaptable Drivers"}, {"location": "tools/adaptable-framework/writing-adaptable-drivers/#high-level-order-of-operations", "text": "Read this doc (You're here!) Decide which DevKit you'll need Build & test your driver using the tools provided in the DevKit Test your driver against TLS Protect Datacenter Submit your driver to Cool Solutions (Venafi's managed GitLab instance) Complete the Marketplace Listing Questionnaire", "title": "High-Level Order of Operations"}, {"location": "tools/vcert/overview-vcert/", "text": "Overview: VCert \u00b6 vCert is a command line utility, SDK, and set of libraries designed to simplify key generation and enrollment of machine identities (also known as SSL/TLS certificates and keys) that comply with enterprise security policy by using Venafi. Go Python Java Ruby Since vCert enables interoperability between both Venafi TLS Protect Datacenter and TLS Protect Cloud, we ask that you test and document for each target.", "title": "VCert"}, {"location": "tools/vcert/overview-vcert/#overview-vcert", "text": "vCert is a command line utility, SDK, and set of libraries designed to simplify key generation and enrollment of machine identities (also known as SSL/TLS certificates and keys) that comply with enterprise security policy by using Venafi. Go Python Java Ruby Since vCert enables interoperability between both Venafi TLS Protect Datacenter and TLS Protect Cloud, we ask that you test and document for each target.", "title": "Overview: VCert"}]}